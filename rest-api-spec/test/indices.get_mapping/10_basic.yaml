---
setup:
  - do:
        indices.create:
          index: test_index
          body:
              mappings:
                test_type:
                  properties:
                    text:
                      type:     string
                      analyzer: whitespace
  - do:
        indices.create:
          index: test_idx
          body:
              mappings:
                test_type:
                  properties:
                    text:
                      type:     string
                      analyzer: keyword

---
"Get index mapping":
  - do:
      indices.get_mapping:
        index: test_index

  - match: {test_index.mappings.test_type.properties.text.type:     string}
  - match: {test_index.mappings.test_type.properties.text.analyzer: whitespace}

---
"Get type mapping":

  - do:
      indices.get_mapping:
        index: test_index
        type: test_type

  - match: {test_index.mappings.test_type.properties.text.type:     string}
  - match: {test_index.mappings.test_type.properties.text.analyzer: whitespace}

---
"Get mappings using _all":

  - do:
      indices.get_mapping:
        index: _all
        # no _all type exists... go with *
        type: '*'

  - match: {test_index.mappings.test_type.properties.text.type:     string}
  - match: {test_index.mappings.test_type.properties.text.analyzer: whitespace}
  - match: {test_idx.mappings..test_type.properties.text.type:       string}
  - match: {test_idx.mappings.test_type.properties.text.analyzer:   keyword}

---
"Get mappings using *":

  - do:
      indices.get_mapping:
        index: '*'
        type:  '*'

  - match: {test_index.mappings.test_type.properties.text.type:     string}
  - match: {test_index.mappings.test_type.properties.text.analyzer: whitespace}
  - match: {test_idx.mappings.test_type.properties.text.type:       string}
  - match: {test_idx.mappings.test_type.properties.text.analyzer:   keyword}

---
"Get mappings using prefix":

  - do:
      indices.get_mapping:
        index: test_*
        type: test_*

  - match: {test_index.mappings.test_type.properties.text.type:     string}
  - match: {test_index.mappings.test_type.properties.text.analyzer: whitespace}
  - match: {test_idx.mappings.test_type.properties.text.type:       string}
  - match: {test_idx.mappings.test_type.properties.text.analyzer:   keyword}

---
"Get mappings using comma separated indices":

  - do:
      indices.get_mapping:
        index: test_index,test_idx
        type: test_type

  - match: {test_index.mappings.test_type.properties.text.type:     string}
  - match: {test_index.mappings.test_type.properties.text.analyzer: whitespace}
  - match: {test_idx.mappings.test_type.properties.text.type:       string}
  - match: {test_idx.mappings.test_type.properties.text.analyzer:   keyword}

---
"Getting a non-existent mapping on an existing index should return an empty body":

  - do:
      indices.get_mapping:
        index: test_index
        type: non-existent

  - match: { '': {}}

---
"Getting an existent and non-existent mapping type should return the existing type and no data about the non-existent type":

  - do:
      indices.get_mapping:
        index: test_index
        type: test_type,non-existent

  - match: {test_index.mappings.test_type.properties.text.type:     string}
  - is_false: test_index.non-existent

---
"Getting mapping on an non-existent index should return 404":

  - do:
      catch: missing
      indices.get_mapping:
        index: non-existent
        type: whatever
